---
import { Icon } from 'astro-icon/components';
import type { PaginationRepository } from '../scripts/pagination';

type Props = {
    pageData: PaginationRepository<any>;
};

const { pageData } = Astro.props;
const { showFirstPage, showPreviousPage, showNextPage, showLastPage } = pageData;

// Get number of buttons (and add 1 to total to account for 'current page' element)
// Range of possible values is 2â€“5

const paginationButtonCount = [showFirstPage, showPreviousPage, showNextPage, showLastPage]
    .filter(Boolean)
    .reduce((total, _) => total + 1, 1);

const elementCountToGridCols: { [key: number]: string } = {
    2: 'grid-cols-2',
    3: 'grid-cols-3',
    4: 'grid-cols-4',
    5: 'grid-cols-5',
};
const gridColClass = elementCountToGridCols[paginationButtonCount];
---

<!-- If you ever need to change the height of this component, then change the following classes --><!-- ul: h-8 --><!-- a: px-3, h-8 --><!-- Icon: size (attribute) --><!-- width is prefixed via grid cols -->
<nav aria-label="Page navigation" class="flex justify-center items-center">
    <ul class:list={['grid justify-center items-center', '-space-x-px h-8 text-sm rounded-lg shadow-md', gridColClass]}>
        {
            pageData.showFirstPage && (
                <li>
                    <a
                        href={pageData.firstPageUrl}
                        class="
                        flex items-center justify-center
                        px-3 h-8 ms-0 leading-tight rounded-s-lg
                        text-gray-temp-500 bg-bg-2 border border-e-0 border-fg-border-2
                        dark:text-gray-temp-300
                        hover:text-gray-temp-700 hover:bg-gray-temp-100
                        dark:hover:text-gray-temp-50 dark:hover:bg-gray-temp-600"
                    >
                        <Icon name="page-first-icon" size="10" desc="First page icon" />
                    </a>
                </li>
            )
        }
        {
            pageData.showPreviousPage && (
                <li>
                    <a
                        href={pageData.prevUrl}
                        class:list={[
                            'flex items-center justify-center',
                            'px-3 h-8 leading-tight',
                            'text-gray-temp-500 bg-bg-2 border border-fg-border-2',
                            'dark:text-gray-temp-300',
                            'hover:text-gray-temp-700 hover:bg-gray-temp-100',
                            'dark:hover:text-gray-temp-50 dark:hover:bg-gray-temp-600',
                            { 'border-e-0 rounded-s-lg': pageData.prevPageIsLeftmost },
                        ]}
                    >
                        <Icon name="page-previous-icon" size="10" desc="Previous page icon" />
                    </a>
                </li>
            )
        }
        <!-- Make li appear 'above' other li's so the colored border won't be behind a non-colored one -->
        <li class="z-10">
            <a
                href="#"
                aria-current="page"
                class:list={[
                    'flex items-center justify-center',
                    'px-3 h-8 leading-tight',
                    'text-primary-600 bg-primary-50 border border-primary-300',
                    'dark:text-primary-300 dark:bg-gray-temp-700 dark:border-gray-temp-600',
                    'hover:text-primary-700 hover:bg-primary-100',
                    'dark:hover:text-primary-100 dark:hover:bg-gray-temp-600',
                    { 'rounded-s-lg': pageData.currentPageIsLeftmost },
                    { 'rounded-e-lg': pageData.currentPageIsRightmost },
                ]}
            >
                {pageData.currentPageNum}
            </a>
        </li>
        {
            pageData.showNextPage && (
                <li>
                    <a
                        href={pageData.nextUrl}
                        class:list={[
                            'flex items-center justify-center',
                            'px-3 h-8 leading-tight',
                            'text-gray-temp-500 bg-bg-2 border border-fg-border-2',
                            'dark:text-gray-temp-300',
                            'hover:text-gray-temp-700 hover:bg-gray-temp-100',
                            'dark:hover:text-gray-temp-50 dark:hover:bg-gray-temp-600',
                            { 'rounded-e-lg': pageData.nextPageIsRightmost },
                        ]}
                    >
                        <Icon name="page-next-icon" size="10" desc="Next page icon" />
                    </a>
                </li>
            )
        }
        {
            pageData.showLastPage && (
                <li>
                    <a
                        href={pageData.lastPageUrl}
                        class="
                        flex items-center justify-center
                        px-3 h-8 leading-tight rounded-e-lg
                        text-gray-temp-500 bg-bg-2 border border-fg-border-2
                        dark:text-gray-temp-300
                        hover:text-gray-temp-700 hover:bg-gray-temp-100
                        dark:hover:text-gray-temp-50 dark:hover:bg-gray-temp-600"
                    >
                        <Icon name="page-last-icon" size="10" desc="Last page icon" />
                    </a>
                </li>
            )
        }
    </ul>
</nav>
